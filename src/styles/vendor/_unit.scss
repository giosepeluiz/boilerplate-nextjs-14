// Foundation for Sites by ZURB
// foundation.zurb.com
// Licenciado sob MIT Open Source

@use "sass:math";

// scss-lint:disable ZeroUnit

/// Define o tamanho base da fonte da página, que é o valor que `1rem` é igual.
/// @type Number
/// @group global
$rem-base: 10px !default;

/// Remove a unidade (por exemplo, px, em, rem) de um valor, retornando apenas o número.
/// @param {Number} $num - Número do qual a unidade será removida.
/// @returns {Number} O mesmo número, sem unidade.
@function strip-unit($num) {
  @return math.div($num, $num * 0 + 1);
}

/// Converte um ou mais valores em pixels para valores correspondentes em rem.
/// @param {Number|List} $values - Um ou mais valores a serem convertidos. Separe-os com espaços, não com vírgulas. Se você precisar converter uma lista separada por vírgulas, envolva a lista entre parênteses.
/// @param {Number} $base [$rem-base] - O valor base a ser usado ao calcular o `rem`. Se você estiver usando o Foundation padrão, isso é 10px.
/// @returns {List} Uma lista de valores convertidos.
@function rem($values, $base: $rem-base) {
  $rem-values: ();
  $count: length($values);

  @if $base == null {
    $base: $rem-base;
  }

  @if $count == 1 {
    @return -zf-to-rem($values, $base);
  }

  @for $i from 1 through $count {
    $rem-values: append($rem-values, -zf-to-rem(nth($values, $i), $base));
  }

  @return $rem-values;
}

/// Converte um valor sem unidade, em pixels ou rem, para em, para uso em breakpoints.
/// @param {Number} $value - Valor a ser convertido.
/// @returns {Number} Um número em em.
@function -zf-bp-to-em($value) {
  // Converte valores em pixels e sem unidade para rem
  @if unit($value) == "px" or unit($value) == "" {
    $value: rem($value);
  }

  // Converte o valor para em
  @return strip-unit($value) * 1em;
}

/// Converte um valor em pixels para o valor correspondente em rem. Qualquer valor passado, independentemente da unidade, é assumido como um valor em pixels.
/// Por padrão, o valor base em pixels usado para calcular o valor em rem é retirado da variável `$rem-base`.
/// @param {Number} $value - Valor em pixels a ser convertido.
/// @returns {Number} Um número em rems, calculado com base no valor dado e no valor base em pixels. Valores em rem são passados como estão.
@function -zf-to-rem($value, $base: $rem-base) {
  // Calcula rem se a unidade de $value não for rem
  @if (unit($value) != "rem") {
    $value: math.div(strip-unit($value), strip-unit($base)) * 1rem;
  }

  // Converte 0rem em 0
  /* stylelint-disable-next-line length-zero-no-unit */
  @if ($value == 0) {
    $value: 0;
  }

  @return $value;
}
